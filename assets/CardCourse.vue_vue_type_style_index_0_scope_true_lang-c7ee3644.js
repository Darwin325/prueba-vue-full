import{H as d,I as g,J as C,r as u,d as y,o as f,c as v,e as s,t as i,q as l,E as w}from"./index-f86a028a.js";const S=async()=>await d.get("/courses"),b=async({old_date:e,limit:t})=>{let a=new URL(g+"/top/courses/count"),n=new URLSearchParams(a.search);return e&&n.append("old_date",e),t&&n.append("limit",t.toString()),a.search=n.toString(),await d.get(a.href)},x=async e=>await d.post("/courses",e),_=e=>{const t=JSON.parse(e.time);return{id:e.id,name:e.name,description:e.description,start_date:e.start_date,end_date:e.end_date,time:t}},L=e=>({..._(e),studentsCount:e.students_count}),U=C("course",()=>{const e=u([]),t=u([]);async function a(){try{const o=await S(),{data:c}=o.data;e.value=c.map(r=>_(r))}catch(o){console.log(o)}}async function n({old_date:o,limit:c}){try{const r=await b({old_date:o,limit:c}),{data:h}=r.data;t.value=h.map(m=>L(m))}catch(r){console.log(r)}}async function p(o){try{await x(o),await a()}catch(c){console.log(c)}}return{courses:e,getCoursesList:a,getTopCoursesList:n,topCourses:t,createCourseStore:p}}),T={class:"card-container"},A={class:"card"},B={class:"card-header"},H={class:"card-body"},I={class:"row"},N={class:"col-6"},k={class:"badge bg-primary"},E={class:"col-6"},J={class:"badge bg-primary"},V=y({__name:"CardCourse",props:{course:null},setup(e){return(t,a)=>(f(),v("div",T,[s("div",A,[s("div",B,[s("h3",null,i(e.course.name),1)]),s("div",H,[s("p",null,i(e.course.description),1),s("p",null,"Inicio del curso: "+i(e.course.start_date),1),s("div",I,[s("div",N,[l(" Hora inicio: "),s("span",k,i(e.course.time.start),1)]),s("div",E,[l(" Hora fin: "),s("span",J,i(e.course.time.end),1)])]),w(t.$slots,"default")])])]))}});export{V as _,_ as c,U as u};
